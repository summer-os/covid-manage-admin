<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.summer.manage.dao.system.SysUserDAO">

    <sql id="selectUserVo">
        SELECT u.id, u.dept_id, u.user_name, u.nick_name, u.email, u.avatar, u.phone_number, u.user_password, u.sex, u.status, u.is_del, u.login_ip, u.login_date, u.created_by, u.created_at, u.remark,
        d.id AS dept_id, d.parent_id, d.dept_name, d.order_num, d.leader, d.status AS dept_status,
        r.id AS role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status AS role_status
        FROM sys_user u
		    LEFT JOIN sys_dept d ON u.dept_id = d.id
		    LEFT JOIN sys_user_role ur ON u.id = ur.user_id
		    LEFT JOIN sys_role r ON r.id = ur.role_id
    </sql>
    <update id="updateUser">
        UPDATE sys_user
        <set>
            <if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
            <if test="userName != null and userName != ''">user_name = #{userName},</if>
            <if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
            <if test="email != null ">email = #{email},</if>
            <if test="phoneNumber != null ">phone_number = #{phoneNumber},</if>
            <if test="sex != null and sex != ''">sex = #{sex},</if>
            <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
            <if test="userPassword != null and userPassword != ''">user_password = #{userPassword},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
            <if test="loginDate != null">login_date = #{loginDate},</if>
            <if test="updatedBy != null and updatedBy != ''">updated_by = #{updatedBy},</if>
            <if test="remark != null">remark = #{remark},</if>
            updated_at = now()
        </set>
        WHERE id = #{id}
    </update>
    <update id="resetUserPwd">
        UPDATE sys_user SET user_password = #{password} WHERE id = #{id}
    </update>
    <update id="updateUserAvatar">
        UPDATE sys_user SET avatar = #{avatar} WHERE id = #{id}
    </update>
    <delete id="deleteUserByIds">
        UPDATE sys_user SET is_del = '2' WHERE id IN
        <foreach collection="array" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>
    <resultMap type="com.summer.manage.entity.system.SysUser" id="SysUserResult">
        <id property="id" column="id"/>
        <result property="deptId" column="dept_id"/>
        <result property="userName" column="user_name"/>
        <result property="nickName" column="nick_name"/>
        <result property="email" column="email"/>
        <result property="phoneNumber" column="phone_number"/>
        <result property="sex" column="sex"/>
        <result property="avatar" column="avatar"/>
        <result property="userPassword" column="user_password"/>
        <result property="status" column="status"/>
        <result property="isDel" column="is_del"/>
        <result property="loginIp" column="login_ip"/>
        <result property="loginDate" column="login_date"/>
        <result property="createdBy" column="created_by"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedBy" column="updated_by"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="remark" column="remark"/>
        <association property="dept" column="dept_id" javaType="com.summer.manage.entity.system.SysDept"
                     resultMap="deptResult"/>
        <collection property="roles" javaType="java.util.List" resultMap="RoleResult"/>
    </resultMap>

    <resultMap id="deptResult" type="com.summer.manage.entity.system.SysDept">
        <id property="id" column="dept_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="deptName" column="dept_name"/>
        <result property="orderNum" column="order_num"/>
        <result property="leader" column="leader"/>
        <result property="status" column="dept_status"/>
    </resultMap>

    <resultMap id="RoleResult" type="com.summer.manage.entity.system.SysRole">
        <id property="id" column="role_id"/>
        <result property="roleName" column="role_name"/>
        <result property="roleKey" column="role_key"/>
        <result property="roleSort" column="role_sort"/>
        <result property="dataScope" column="data_scope"/>
        <result property="status" column="role_status"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_user(
        <if test="deptId != null and deptId != 0">dept_id,</if>
        <if test="userName != null and userName != ''">user_name,</if>
        <if test="nickName != null and nickName != ''">nick_name,</if>
        <if test="email != null and email != ''">email,</if>
        <if test="avatar != null and avatar != ''">avatar,</if>
        <if test="phoneNumber != null and phoneNumber != ''">phone_number,</if>
        <if test="sex != null and sex != ''">sex,</if>
        <if test="userPassword != null and userPassword != ''">user_password,</if>
        <if test="status != null and status != ''">status,</if>
        <if test="remark != null and remark != ''">remark,</if>
        <if test="createdBy != null and createdBy != ''">created_by,</if>
        created_at
        )VALUES(
        <if test="deptId != null and deptId != ''">#{deptId},</if>
        <if test="userName != null and userName != ''">#{userName},</if>
        <if test="nickName != null and nickName != ''">#{nickName},</if>
        <if test="email != null and email != ''">#{email},</if>
        <if test="avatar != null and avatar != ''">#{avatar},</if>
        <if test="phoneNumber != null and phoneNumber != ''">#{phoneNumber},</if>
        <if test="sex != null and sex != ''">#{sex},</if>
        <if test="userPassword != null and userPassword != ''">#{userPassword},</if>
        <if test="status != null and status != ''">#{status},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="createdBy != null and createdBy != ''">#{createdBy},</if>
        now()
        )
    </insert>
    <select id="getSysUserById" resultType="com.summer.manage.entity.system.SysUser">
        SELECT * FROM sys_user WHERE id = #{userId}
    </select>
    <select id="getUserByUserName" resultType="com.summer.manage.entity.system.SysUser">
        SELECT * FROM sys_user WHERE user_name = #{userName}
    </select>
    <select id="listUser" resultType="com.summer.manage.entity.system.SysUser">
        SELECT u.*,d.dept_name FROM sys_user u
        LEFT JOIN sys_dept d ON u.dept_id = d.id
        WHERE u.is_del = '0'
        <if test="userName != null and userName != ''">
            AND u.user_name LIKE #{userName}
        </if>
        <if test="status != null and status != ''">
            AND u.status = #{status}
        </if>
        <if test="phoneNumber != null and phoneNumber != ''">
            AND u.phone_number LIKE #{phoneNumber}
        </if>
        <if test="beginTime != null and beginTime != ''"><!-- 开始时间检索 -->
            AND date_format(u.created_at,'%y%m%d') &gt;= date_format(#{beginTime},'%y%m%d')
        </if>
        <if test="endTime != null and endTime != ''"><!-- 结束时间检索 -->
            AND date_format(u.created_at,'%y%m%d') &lt;= date_format(#{endTime},'%y%m%d')
        </if>
        <if test="deptId != null and deptId != 0">
            AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.id FROM sys_dept t WHERE find_in_set(#{deptId},
            ancestors) ))
        </if>
        <!-- 数据范围过滤 -->
        <if test="params != null">
            ${params.dataScope}
        </if>
        ORDER BY created_at LIMIT #{offset}, #{size};
    </select>
    <select id="listUserCount" resultType="java.lang.Long">
        SELECT COUNT(*) FROM sys_user u
        LEFT JOIN sys_dept d ON u.dept_id = d.id
        WHERE u.is_del = '0'
        <if test="userName != null and userName != ''">
            AND u.user_name LIKE #{userName}
        </if>
        <if test="status != null and status != ''">
            AND u.status = #{status}
        </if>
        <if test="phoneNumber != null and phoneNumber != ''">
            AND u.phone_number LIKE #{phoneNumber}
        </if>
        <if test="beginTime != null and beginTime != ''"><!-- 开始时间检索 -->
            AND date_format(u.created_at,'%y%m%d') &gt;= date_format(#{beginTime},'%y%m%d')
        </if>
        <if test="endTime != null and endTime != ''"><!-- 结束时间检索 -->
            AND date_format(u.created_at,'%y%m%d') &lt;= date_format(#{endTime},'%y%m%d')
        </if>
        <if test="deptId != null and deptId != 0">
            AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.id FROM sys_dept t WHERE find_in_set(#{deptId},
            ancestors) ))
        </if>
        <!-- 数据范围过滤 -->
        <if test="params != null">
            ${params.dataScope}
        </if>
    </select>
    <select id="checkUserNameUnique" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM sys_user WHERE user_name = #{userName} AND is_del = '0' LIMIT 1
    </select>
    <select id="checkPhoneUnique" resultType="com.summer.manage.entity.system.SysUser">
        SELECT id,phone_number FROM sys_user WHERE phone_number = #{phoneNumber} AND is_del = '0' LIMIT 1
    </select>
    <select id="checkEmailUnique" resultType="com.summer.manage.entity.system.SysUser">
        SELECT id,email FROM sys_user WHERE email = #{email} AND is_del = '0' LIMIT 1
    </select>
    <select id="selectUserById" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        WHERE u.id = #{userId}
    </select>
    <select id="getUserByRoleId" resultType="com.summer.manage.entity.system.SysUser">
        SELECT u.* FROM sys_user u,sys_user_role ur WHERE ur.user_id = u.id AND ur.role_id = #{status}
    </select>
    <select id="getUserByDeptId" resultType="com.summer.manage.entity.system.SysDept">
        SELECT id,nick_name AS deptName FROM sys_user WHERE dept_id = #{id}
    </select>

</mapper>
